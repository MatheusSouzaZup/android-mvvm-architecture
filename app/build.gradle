apply plugin: 'com.android.application'

def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "br.com.zup.mvvmarchitecture"
        minSdkVersion 22
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    def STRING = "String"
    def HOST = "HOST"

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    flavorDimensions "dev"
    productFlavors {
        dev {
            applicationId 'br.com.zup.architecture.dev'
            buildConfigField STRING, HOST, keystoreProperties['host_dev']
            manifestPlaceholders = [
                    appName: "MVVM DEV"
            ]
            dimension "dev"
        }

        mock {
            applicationId 'br.com.zup.architecutre.mock'
            buildConfigField STRING, HOST, keystoreProperties['host_dev']

            manifestPlaceholders = [
                    appName: "MVVM MOCK"
            ]
            dimension "dev"
        }
        hml {
            applicationId 'br.com.zup.architecture.hml'
            buildConfigField STRING, HOST, keystoreProperties['host_dev']
            manifestPlaceholders = [
                    appName: "MVVM HML"
            ]

            dimension "dev"
        }

        prd {
            applicationId 'br.com.zup.architecture'
            buildConfigField STRING, HOST, keystoreProperties['host_dev']

            manifestPlaceholders = [
                    appName: "MVVM PROD"
            ]

            dimension "dev"
        }


    }
    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }
    dataBinding {
        enabled = true
    }
}
def SupportLibrary = '28.0.0'
def ConstraintLayout = '1.1.3'
def Room = '1.1.1'

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "com.android.support:appcompat-v7:${SupportLibrary}"
    implementation "com.android.support:design:${SupportLibrary}"
    implementation "com.android.support:recyclerview-v7:${SupportLibrary}"
    implementation "com.android.support.constraint:constraint-layout:${ConstraintLayout}"
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    // Dependency Injection
    implementation "com.google.dagger:dagger:2.18"
    implementation "com.google.dagger:dagger-android-support:2.17"
    annotationProcessor "com.google.dagger:dagger-android-processor:2.17"
    annotationProcessor "com.google.dagger:dagger-compiler:2.17"

    // Room
    implementation "android.arch.persistence.room:runtime:${Room}"
    annotationProcessor "android.arch.persistence.room:compiler:${Room}"

    // Picasso
    implementation 'com.squareup.picasso:picasso:2.71828'

    // Lifecycle
    implementation "android.arch.lifecycle:extensions:1.1.1"
    annotationProcessor "android.arch.lifecycle:compiler:1.1.1"

    // API libs
    implementation "com.squareup.retrofit2:retrofit:2.4.0"
    implementation "com.squareup.okhttp3:okhttp:3.11.0"
    implementation "com.squareup.retrofit2:converter-gson:2.4.0"
    implementation "com.squareup.okhttp3:logging-interceptor:3.11.0"

    // Views
    implementation "br.com.zup:multi-state-layout:1.0.3"
}
